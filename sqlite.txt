CODECADEMY SQL PROJECT:

Usage Funnels with Warby Parker

Warby Parker is a transformative lifestyle brand with a lofty objective: to offer designer eyewear at a revolutionary price while leading the way for socially conscious businesses. Founded in 2010 and named after two characters in an early Jack Kerouac journal, Warby Parker believes in creative thinking, smart design, and doing good in the world. For every pair of eyeglasses and sunglasses sold, a pair is distributed to someone in need.

In this project, you will analyze different Warby Parker’s marketing funnels in order to calculate conversion rates. Here are the funnels and the tables that you are given:

Quiz Funnel:

    survey

Home Try-On Funnel:

    quiz
    home_try_on
    purchase

This project was a collaboration with Warby Parker’s Data Science team (thank you!) and uses fictional data.

Let’s get started!
..........................................................................................................................
CODES:

CHURN RATE:
WITH enrollments AS
( SELECT *
 FROM subscriptions
 WHERE (subscription_start < '2017-01-01')
 AND (
   (subscription_end >= '2017-01-01')
   OR (subscription_end IS NULL)
 )
),

status AS
(SELECT
 CASE 
 WHEN (subscription_end > '2017-01-31')
 OR (subscription_end IS NULL) THEN 0
 ELSE 1
 END AS is_canceled,
 
 CASE
 WHEN subscription_start < '2017-01-01'
 AND (
   (subscription_end >= '2017-01-01')
   OR (subscription_end IS NULL) 
 ) THEN 1
   ELSE 0
   END AS is_active
   FROM enrollments
)

SELECT 1.0 * SUM(is_canceled)/SUM(is_active) AS 'Churn Rate' FROM status;

......................................................................................................
MULTIPLE MONTH: CHURN RATE CALCULATION:

WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
status AS
(SELECT id, first_day as month,
CASE
  WHEN (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) THEN 1
  ELSE 0
END as is_active,
CASE 
  WHEN subscription_end BETWEEN first_day AND last_day THEN 1
  ELSE 0
END as is_canceled
FROM cross_join),
status_aggregate AS
(SELECT
  month,
  SUM(is_active) as active,
  SUM(is_canceled) as canceled
FROM status
GROUP BY month)

SELECT month, 1.0 * (status_aggregate.canceled)/(status_aggregate.active) as churn_rate
FROM status_aggregate
GROUP BY 1;
